node('sonarrunner') {

    stage('Code Quality Check') {
	//the checkout is mandatory, otherwise code quality check would fail
        echo "checking out source"
        echo "Build: ${BUILD_ID}"
        checkout scm
        SONARQUBE_PWD = sh (
            script: 'oc env dc/sonarqube --list | awk  -F  "=" \'/SONARQUBE_ADMINPW/{print $2}\'',
            returnStdout: true
        ).trim()
        echo "SONARQUBE_PWD: ${SONARQUBE_PWD}"

        SONARQUBE_URL = sh (
            script: 'oc get routes -o wide --no-headers | awk \'/sonarqube/{ print match($0,/edge/) ?  "https://"$2 : "http://"$2 }\'',
            returnStdout: true
        ).trim()
        echo "SONARQUBE_URL: ${SONARQUBE_URL}"

        dir('sonar-runner') {
            sh "./scan.sh"
            sh returnStdout: true, script: "./gradlew sonarqube -Dsonar.host.url=${SONARQUBE_URL} -Dsonar.verbose=true --stacktrace --info  -Dsonar.sources=.."
            
            publishHTML (target: [
                allowMissing: false,
                alwaysLinkToLastBuild: false,
                keepAll: true,
                reportDir: '../',
                reportFiles: 'hetscommon.html',
                reportName: "COMMON Vulnerability Report"
                ])
            publishHTML (target: [
                allowMissing: false,
                alwaysLinkToLastBuild: false,
                keepAll: true,
                reportDir: '../',
                reportFiles: 'frontend.html',
                reportName: "FrontEnd Vulnerability Report"
                ])
            publishHTML (target: [
                allowMissing: false,
                alwaysLinkToLastBuild: false,
                keepAll: true,
                reportDir: '../',
                reportFiles: 'pdfserver.html',
                reportName: "PDF Server Vulnerability Report"
                ])
            publishHTML (target: [
                allowMissing: false,
                alwaysLinkToLastBuild: false,
                keepAll: true,
                reportDir: '../',
                reportFiles: 'hetsapi.html',
                reportName: "API Vulnerability Report"
                ])                  
            publishHTML (target: [
                allowMissing: false,
                alwaysLinkToLastBuild: false,
                keepAll: true,
                reportDir: '../',
                reportFiles: 'client.html',
                reportName: "Client Vulnerability Report"
                ])   
        }
    }
}	