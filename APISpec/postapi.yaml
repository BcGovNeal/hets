  /equipment/search:
    get:
      summary: Searches Equipment
      description:
        Used for the equipment search page.
      tags:
        - Equipment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:        
        - name: localareas
          in: query
          description: Local Areas (array of id numbers)
          collectionFormat: multi
          type: array
          items:
            type: integer
        - name: types
          in: query
          description: Equipment Types (array of id numbers)
          type: array
          items:
            type: integer
        - name: attachments
          in: query
          description: Equipment Attachments (array of id numbers)
          type: array
          items:
            type: integer
        - name: owner
          in: query
          type: integer
        - name: status
          in: query
          description: Status
          type: string
        - name: hired
          in: query
          description: Hired
          type: boolean
        - name: notverifiedsincedate
          in: query
          description: Not Verified Since Date
          type: string
          format: date-time
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Equipment"
  /equipment/{id}/equipmentattachments:
    get:
      tags:
        - Equipment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Equipment to fetch EquipmentAttachments for
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/EquipmentAttachment"
  /owners/search:
    get:
      summary: Searches Owners
      description:
        Used for the owner search page.
      tags:
        - Owner
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:        
        - name: localareas
          in: query
          description: Local Areas (array of id numbers)
          collectionFormat: multi
          required: false
          type: array
          items:
            type: integer
        - name: equipmenttypes
          in: query
          description: Equipment Types (array of id numbers)
          required: false
          type: array
          items:
            type: integer
        - name: owner
          in: query
          description: Id for a specific Owner
          required: false
          type: integer
        - name: status
          in: query
          description: Status
          required: false
          type: string
        - name: hired
          in: query
          description: Hired
          required: false
          type: boolean
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Owner"              
  /owners/{id}/contacts:
    get:
      tags:
        - Owner
      description: Gets an Owner's Contacts      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Owner to fetch Contacts for
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Contact"
    put:
      tags:
        - Owner
      description: Replaces an Owner's Contacts
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Owner to replace Contacts for
          required: true
          type: integer
        - name: item
          in: body
          description: Replacement Owner contacts.
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Contact"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Contact"
  /owners/{id}/equipment:
    get:
      tags:
        - Owner
      description: Gets an Owner's Equipment      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Owner to fetch Equipment for
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Equipment"
    put:
      tags:
        - Owner
      description: Replaces an Owner's Equipment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Owner to replace Equipment for
          required: true
          type: integer
        - name: item
          in: body
          description: Replacement Owner Equipment.
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Equipment"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Equipment"              
  /roles/{id}/permissions:
    get:
      description: Get all the permissions for a role
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
    put:
      description: Updates the permissions for a role
      tags:
        - Role
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Permission"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
          description: Role not found
    post:
      description: Adds a permissions to a role
      tags:
        - Role
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Permission"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
          description: Role not found
  /roles/{id}/users:
    get:
      description: Gets all the users for a role
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
    put:
      description: Updates the users for a role
      tags:
        - Role
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
          description: Role not found
  /users/current:
    get:
      description: Get the currently logged in user
      tags:
        - CurrentUser
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CurrentUserViewModel"
  /users/current/favourites:
    put:
      description: Updates a favourite
      tags:
        - CurrentUser
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserFavourite"
      responses:
        201:
          description: UserFavourite created
          headers:
            Location:
              description: A link to the UserFavourite
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserFavourite"            
    post:
      description: Create new favourite for the current user
      tags:
        - CurrentUser
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserFavourite"
      responses:
        201:
          description: UserFavourite created
          headers:
            Location:
              description: A link to the UserFavourite
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserFavourite"
  /users/current/favourites/{favouritetype}:
    get:
      description: Returns a users favourites of a given type.  If type is empty, returns all.
      tags:
        - CurrentUser
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserFavourite"
        404:
           description: User not found
      parameters:
        - name: favouritetype
          in: path
          description: type of favourite to return
          required: true
          type: string
  /users/current/favourites/{id}/delete:
    post:
      description: Removes a specific user favourite
      tags:
        - CurrentUser
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
      parameters:
        - name: id
          in: path
          description: id of Favourite to delete
          required: true
          type: integer                  
  /users/{id}/roles:
    get:
      description: Returns the roles for a user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
           description: User not found
    post:
      description: Adds a role to a user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserRoleViewModel"
      responses:
        201:
          description: Role created for user
          headers:
            Location:
              description: A link to the User Role
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserRoleViewModel"
    put:
      description: Updates the roles for a user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
          description: User not found
  /users/{id}/permissions:
    get:
      description: Returns the set of permissions for a user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
           description: User not found
  /users/{id}/groups:
    get:
      description: Returns all groups that a user is a member of
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
        404:
           description: User not found
    put:
      description: Updates the active set of groups for a user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembership"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
        404:
          description: User not found
    post:
      description: Add to the active set of groups for a user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembership"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
        404:
          description: User not found
  /users/{id}/favourites:
    get:
      description: Returns a user's favourites of a given context type
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserFavouriteViewModel"
        "404":
           description: User not found
      parameters:
        - name: id
          in: path
          description: id of User to fetch favorites for
          required: true
          type: integer
  /regions/{id}/districts:
    get:
      description: Returns the districts for a specific region
      tags:
        - Region
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/District'
      parameters:
        - name: id
          in: path
          description: id of Region for which to fetch the Districts
          required: true
          type: integer
  /districts/{id}/serviceareas:
    get:
      description: Returns the Service Areas for a specific region
      tags:
        - District
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceArea'
      parameters:
        - name: id
          in: path
          description: id of District for which to fetch the ServiceAreas
          required: true
          type: integer
